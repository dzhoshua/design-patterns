# version: "3"

# services:
#   cont1:
#       container_name: cont1
#       image: cont1
#       ports:
#         - 8000:8080
#       volumes:
#         - ./settings.json:/app/settings.json
#   cont2:
#     container_name: cont2
#     image: cont2
#     ports:
#       - 8001:8080
#     volumes:
#       - ./settings.json:/app/settings.json

# networks:
#   default:

version: "3"

services:
  # Основной сервис
  cont1:
    container_name: cont1
    image: cont1
    ports:
      - 8000:8080
    volumes:
      - ./settings.json:/app/settings.json

  # Основной сервис
  cont2:
    container_name: cont2
    image: cont2
    ports:  
      - 8001:8080
    volumes:
      - ./settings.json:/app/settings.json

  # Proxy
  proxy:
    container_name: proxy
    image: proxy
    ports:
      - 9000:80
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf

  # Управление контейнерами
  portainer:
    image: portainer/portainer-ce:latest
    ports:
      - 9443:9443
    volumes:
      - ./data:/data
      - /var/run/docker.sock:/var/run/docker.sock

   
  # База данных
  postgres:
    image: postgres:16.3
    container_name: "postgres"
    environment:
      POSTGRES_PASSWORD: ${POSTGRESQL_PASS}
      POSTGRES_USER: ${POSTGRESQL_USER}
      PGDATA: "/var/lib/postgresql/data/pgdata"
    volumes:
      - ./pgdata:/var/lib/postgresql/data
    ports:
      - "${POSTGRESQL_PORT:-5432}:5432"
    restart: always  

  pgadmin:
    container_name: "pgadmin"
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${POSTGRESQL_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${POSTGRESQL_PASS}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    volumes:
      - ./pgadmin:/var/lib/pgadmin  
    restart: always
    depends_on:
    - postgres



networks:
  default:
